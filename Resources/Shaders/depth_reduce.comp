#version 460

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

layout(binding = 0) uniform sampler2D inImage;
layout(binding = 1, r32f) uniform writeonly image2D outImage;

layout(push_constant) uniform block
{
	vec2 imageSize;
};

void main()
{
	uvec2 pos = gl_GlobalInvocationID.xy;

	// Sampler is set up to do max reduction, so this computes the maximum depth of a 2x2 texel quad 
	float depth = texture(inImage, (vec2(pos) + vec2(0.5)) / imageSize).x;

	imageStore(outImage, ivec2(pos), vec4(depth));
}